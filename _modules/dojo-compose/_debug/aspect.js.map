{"version":3,"file":"aspect.js","sourceRoot":"","sources":["aspect.ts"],"names":[],"mappings":"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","sourcesContent":["import WeakMap from 'dojo-core/WeakMap';\r\n\r\nexport interface AdvisingFunction extends Function {\r\n\tnext: AdvisingFunction;\r\n\tprevious: AdvisingFunction;\r\n}\r\n\r\nexport interface DispatchAdvice<T> {\r\n\tbefore?: BeforeAdvice[];\r\n\tafter?: AfterAdvice<T>[];\r\n\tjoinPoint: Function;\r\n}\r\n\r\nexport interface BeforeAdvice {\r\n    (...args: any[]): any[] | void;\r\n}\r\n\r\nexport interface AfterAdvice<T> {\r\n    (result: T, ...args: any[]): T;\r\n}\r\n\r\nexport interface AroundAdvice<T> {\r\n    (origFn: GenericFunction<T>): (...args: any[]) => T;\r\n}\r\n\r\nexport enum AdviceType { Before, After, Around };\r\n\r\nconst dispatchAdviceMap = new WeakMap<Function, DispatchAdvice<any>>();\r\n\r\nexport interface GenericFunction<T> {\r\n\t(...args: any[]): T;\r\n}\r\n\r\nfunction getDispatcher<T>(joinPoint: GenericFunction<T>): GenericFunction<T> {\r\n\r\n\tfunction dispatcher(...args: any[]): T {\r\n\t\tconst adviceMap = dispatchAdviceMap.get(dispatcher);\r\n\t\tif (adviceMap.before) {\r\n\t\t\targs = adviceMap.before.reduce((previousArgs, advice) => {\r\n\t\t\t\tconst currentArgs = advice.apply(this, previousArgs);\r\n\t\t\t\treturn currentArgs ? currentArgs : previousArgs;\r\n\t\t\t}, args);\r\n\t\t}\r\n\t\tlet result = adviceMap.joinPoint.apply(this, args);\r\n\t\tif (adviceMap.after) {\r\n\t\t\tresult = adviceMap.after.reduce((previousResult, advice) => {\r\n\t\t\t\treturn advice.apply(this, [ previousResult ].concat(args));\r\n\t\t\t}, result);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tdispatchAdviceMap.set(dispatcher, {\r\n\t\tjoinPoint: joinPoint\r\n\t});\r\n\r\n\treturn dispatcher;\r\n}\r\n\r\nfunction advise<T>(joinPoint: GenericFunction<T>, type: AdviceType, advice: BeforeAdvice|AfterAdvice<T>|AroundAdvice<T>): GenericFunction<T> {\r\n\tlet dispatcher: GenericFunction<any> = joinPoint;\r\n\tif (type === AdviceType.Around) {\r\n\t\tdispatcher = getDispatcher(advice.apply(this, [ joinPoint ]));\r\n\t}\r\n\telse {\r\n\t\tif (!dispatchAdviceMap.has(joinPoint)) {\r\n\t\t\tdispatcher = getDispatcher(joinPoint);\r\n\t\t}\r\n\t\tconst adviceMap = dispatchAdviceMap.get(dispatcher);\r\n\t\tif (type === AdviceType.Before) {\r\n\t\t\t(adviceMap.before || (adviceMap.before = [])).unshift(<BeforeAdvice> advice);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t(adviceMap.after || (adviceMap.after = [])).push(<AfterAdvice<T>> advice);\r\n\t\t}\r\n\t}\r\n\treturn dispatcher;\r\n}\r\n\r\nexport function before<T>(joinPoint: GenericFunction<T>, advice: BeforeAdvice): GenericFunction<T> {\r\n\treturn advise(joinPoint, AdviceType.Before, advice);\r\n}\r\n\r\nexport function after<T>(joinPoint: GenericFunction<T>, advice: AfterAdvice<T>): GenericFunction<T> {\r\n\treturn advise(joinPoint, AdviceType.After, advice);\r\n}\r\n\r\nexport function around<T>(joinPoint: GenericFunction<T>, advice: AroundAdvice<T>): GenericFunction<T> {\r\n\treturn advise<T>(joinPoint, AdviceType.Around, advice);\r\n}\r\n"]}